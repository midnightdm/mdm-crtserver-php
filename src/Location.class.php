<?php
if(php_sapi_name() !='cli') { exit('No direct script access allowed.');}
/* * * * * * * * *
 * Location Class
 * daemon/src/Location.class.php
 * 
 * Includes Location, Zone and Point classes 
 */

class Location {
  public $live;
  public $mm;
  public $lastMM;
  public $description;
  public $point;
  public $event;
  public $events; //array
  public $eventTS; 
  public $lastEvent;
  public $lastEventTS;
  public $waypoint;
  public $waypoints; //array
  public $lastWaypoint;
  public $lastWaypointTS;


  public function __construct($livescan) {
    $this->live = $livescan; //PlotDaemon
    $this->mm   = "new";
    $this->event = "new";
    $this->waypoint = "new";
    $this->events = [];
    $this->waypoints = [];
    
  }

  public function setPoint() {
    $this->point = [$this->live->liveLastLon, $this->live->liveLastLat];
  }

  public function calculate($suppressTrigger=false) {
    flog( "      Location::calculate(".$this->live->liveName.")\n");
    //Define points of polygons represenating geographic zones


    //482=>[[-90.58403075588232,41.51763670388024],[-90.58113556831556,41.51200304813109],[-90.55951551882352,41.51032618297966],[-90.56692264476122,41.52129897352564]],
    //483=>[[-90.56692264476122,41.52129897352564],[-90.55951551882352,41.51032618297966],[-90.54552841799722,41.50964503103194],[-90.54808920603612,41.52939278853504]],

    $polys = [

      360=>[[-91.4459288116236,40.37099081497603],[-91.43488386527973,40.36300844972092],[-91.41711557624201,40.36693390266821],[-91.43499399688842,40.3873731991855]],
      361=>[[-91.43499399688842,40.3873731991855],[-91.41711557624201,40.36693390266821],[-91.40420051009731,40.3717112160588],[-91.41154952057872,40.38682792489156]],
      362=>[[-91.41154952057872,40.38682792489156],[-91.40420051009731,40.3717112160588],[-91.38733328739583,40.37527860518409],[-91.39444026512147,40.3918389310806]],
      363=>[[-91.39444026512147,40.3918389310806],[-91.38733328739583,40.37527860518409],[-91.35814237000325,40.38874370765545],[-91.37825145533446,40.39274879911763]],
      364=>[[-91.37825145533446,40.39274879911763],[-91.35814237000325,40.38874370765545],[-91.35537415411507,40.41094511147108],[-91.3767624614461,40.40517606501739]],
      365=>[[-91.3767624614461,40.40517606501739],[-91.35537415411507,40.41094511147108],[-91.36211897774818,40.42422934738423],[-91.3840941177845,40.41781606574328]],
      366=>[[-91.3840941177845,40.41781606574328],[-91.36211897774818,40.42422934738423],[-91.36884571684543,40.43554933192856],[-91.39246860215052,40.43378149948098]],
      367=>[[-91.39246860215052,40.43378149948098],[-91.36884571684543,40.43554933192856],[-91.36852837065811,40.44908610691719],[-91.39049486381882,40.45096393738126]],
      369=>[[-91.38580152759047,40.46636956546656],[-91.36074755108754,40.46278786932928],[-91.35586084136547,40.47685985148898],[-91.37811309622477,40.47973529556068]],
      368=>[[-91.39049486381882,40.45096393738126],[-91.36852837065811,40.44908610691719],[-91.36074755108754,40.46278786932928],[-91.38580152759047,40.46636956546656]],
      370=>[[-91.37811309622477,40.47973529556068],[-91.35586084136547,40.47685985148898],[-91.35227956473639,40.49257954261637],[-91.37481250551004,40.49305515091331]],
      371=>[[-91.37481250551004,40.49305515091331],[-91.35227956473639,40.49257954261637],[-91.34974934824609,40.51085876000518],[-91.37724238065508,40.50535956815101]],
      372=>[[-91.37724238065508,40.50535956815101],[-91.34974934824609,40.51085876000518],[-91.36618654875721,40.52558915439432],[-91.38590087091876,40.51554640768165]],
      373=>[[-91.38590087091876,40.51554640768165],[-91.36618654875721,40.52558915439432],[-91.38459385967833,40.53946928104329],[-91.39430444425523,40.52314363401523]],
      374=>[[-91.39430444425523,40.52314363401523],[-91.38459385967833,40.53946928104329],[-91.3970623876968,40.54221309570166],[-91.43373788495475,40.53405084250929]],
      375=>[[-91.43373788495475,40.53405084250929],[-91.3970623876968,40.54221309570166],[-91.39541601459894,40.55376022060289],[-91.429076337168,40.55785461115822]],
      376=>[[-91.429076337168,40.55785461115822],[-91.39541601459894,40.55376022060289],[-91.38524353222243,40.56285411554297],[-91.41791553688331,40.57969012394841]],
      377=>[[-91.41791553688331,40.57969012394841],[-91.38524353222243,40.56285411554297],[-91.37120425213621,40.57194717298203],[-91.40957094532342,40.59730308055073]],
      378=>[[-91.40957094532342,40.59730308055073],[-91.37120425213621,40.57194717298203],[-91.35842400373855,40.582599719883],[-91.39070056627035,40.6034648102497]],
      398=>[[-91.12199412356098,40.72726232485513],[-91.08377052902479,40.72557899610607],[-91.0867865786864,40.7361824678627],[-91.12067219429741,40.74219432609279]],
      397=>[[-91.12138015480579,40.71328172413125],[-91.0845278384906,40.71356671141272],[-91.08377052902479,40.72557899610607],[-91.12199412356098,40.72726232485513]],
      396=>[[-91.11964664044632,40.69894351699991],[-91.08323087920178,40.69811076610788],[-91.0845278384906,40.71356671141272],[-91.12138015480579,40.71328172413125]],
      395=>[[-91.12460000323647,40.68820045646742],[-91.09876586471357,40.67412939164184],[-91.08323087920178,40.69811076610788],[-91.11964664044632,40.69894351699991]],
      394=>[[-91.13222862055505,40.67695422536141],[-91.11233483511343,40.66270370993414],[-91.09876586471357,40.67412939164184],[-91.12460000323647,40.68820045646742]],
      393=>[[-91.14532500909088,40.66958847149292],[-91.12884402925467,40.64791608347565],[-91.11233483511343,40.66270370993414],[-91.13222862055505,40.67695422536141]],
      392=>[[-91.16212516612507,40.66373827217783],[-91.1461380069682,40.64175683800381],[-91.12884402925467,40.64791608347565],[-91.14532500909088,40.66958847149292]],
      391=>[[-91.1792578594051,40.65998897354515],[-91.16206840977118,40.63707210332565],[-91.1461380069682,40.64175683800381],[-91.16212516612507,40.66373827217783]],
      390=>[[-91.19043898996912,40.64794214497102],[-91.17909125540938,40.63050635024376],[-91.16206840977118,40.63707210332565],[-91.1792578594051,40.65998897354515]],
      389=>[[-91.20289998737539,40.64401738998291],[-91.20048464497016,40.62743434735182],[-91.17909125540938,40.63050635024376],[-91.19043898996912,40.64794214497102]],
      388=>[[-91.22022726966301,40.64626567739748],[-91.22041340834852,40.63194536501991],[-91.20048464497016,40.62743434735182],[-91.20289998737539,40.64401738998291]],
      387=>[[-91.24073837441713,40.6478118996264],[-91.23797343432622,40.62677260256465],[-91.22041340834852,40.63194536501991],[-91.22022726966301,40.64626567739748]],
      386=>[[-91.26017768583756,40.64675200629384],[-91.25681328397528,40.62708232520131],[-91.23797343432622,40.62677260256465],[-91.24073837441713,40.6478118996264]],
      385=>[[-91.28047119786082,40.63813252748157],[-91.27187059625199,40.62623355437002],[-91.25681328397528,40.62708232520131],[-91.26017768583756,40.64675200629384]],
      384=>[[-91.29707319952509,40.63107831034466],[-91.28624740978996,40.61969823869867],[-91.27187059625199,40.62623355437002],[-91.28047119786082,40.63813252748157]],
      383=>[[-91.31597357070216,40.62996847068304],[-91.30760362853403,40.61291547031313],[-91.28624740978996,40.61969823869867],[-91.29707319952509,40.63107831034466]],
      382=>[[-91.33419744150133,40.62352920735297],[-91.3212916760618,40.60500933295604],[-91.30760362853403,40.61291547031313],[-91.31597357070216,40.62996847068304]],
      381=>[[-91.35482987821091,40.6209406407424],[-91.33757315151651,40.59903094019166],[-91.3212916760618,40.60500933295604],[-91.33419744150133,40.62352920735297]],
      380=>[[-91.37499864999297,40.61590399497198],[-91.34878183089562,40.59056206274902],[-91.33757315151651,40.59903094019166],[-91.35482987821091,40.6209406407424]],
      379=>[[-91.39070056627035,40.6034648102497],[-91.35842400373855,40.582599719883],[-91.34878183089562,40.59056206274902],[-91.37499864999297,40.61590399497198]],
      399=>[[-91.12067219429741,40.74219432609279],[-91.0867865786864,40.7361824678627],[-91.08221057220837,40.74248451321368],[-91.10899148847221,40.75681359243708]],
      400=>[[-91.10899148847221,40.75681359243708],[-91.08221057220837,40.74248451321368],[-91.06012857458053,40.75821593841954],[-91.1019645173725,40.76850409734178]],
      401=>[[-91.1019645173725,40.76850409734178],[-91.06012857458053,40.75821593841954],[-91.06554808448644,40.78149330773091],[-91.09730712934845,40.78111487249328]],
      402=>[[-91.09730712934845,40.78111487249328],[-91.06554808448644,40.78149330773091],[-91.06912976244084,40.79726338703072],[-91.09647365520543,40.79608002174889]],
      403=>[[-91.09647365520543,40.79608002174889],[-91.06912976244084,40.79726338703072],[-91.07603503275085,40.80818660034473],[-91.101165224757,40.81019417305557]],
      404=>[[-91.101165224757,40.81019417305557],[-91.07603503275085,40.80818660034473],[-91.08153737289437,40.82205268077494],[-91.10075579942655,40.82493501334616]],
      405=>[[-91.10075579942655,40.82493501334616],[-91.08153737289437,40.82205268077494],[-91.0651962587978,40.82691330519312],[-91.10049171382515,40.84394794086074]],
      406=>[[-91.10049171382515,40.84394794086074],[-91.0651962587978,40.82691330519312],[-91.05304160069869,40.8345852557791],[-91.0902711510027,40.86153306527834]],
      407=>[[-91.0902711510027,40.86153306527834],[-91.05304160069869,40.8345852557791],[-91.04525384815673,40.85045367587635],[-91.06845604528604,40.8651296432478]],
      408=>[[-91.06845604528604,40.8651296432478],[-91.04525384815673,40.85045367587635],[-91.04127385640398,40.86565602893574],[-91.05655499129665,40.87873116383629]],
      409=>[[-91.05655499129665,40.87873116383629],[-91.04127385640398,40.86565602893574],[-91.02498520706804,40.87339658563739],[-91.04078379129794,40.88625229618901]],
      410=>[[-91.04078379129794,40.88625229618901],[-91.02498520706804,40.87339658563739],[-91.01085487562095,40.87728763570471],[-91.02514539751323,40.89853330915333]],
      411=>[[-91.02514539751323,40.89853330915333],[-91.01085487562095,40.87728763570471],[-90.99775866600535,40.88295128770526],[-91.01325969220412,40.90719952181306]],
      412=>[[-91.01325969220412,40.90719952181306],[-90.99775866600535,40.88295128770526],[-90.98188962772478,40.88498594006604],[-91.00010591350276,40.92132723697627]],
      413=>[[-91.00010591350276,40.92132723697627],[-90.98188962772478,40.88498594006604],[-90.96409887484441,40.90358632336599],[-90.98993490677103,40.92770481271337]],
      414=>[[-90.98993490677103,40.92770481271337],[-90.96409887484441,40.90358632336599],[-90.95755714781623,40.92248877110439],[-90.98235015785697,40.93171482772981]],
      415=>[[-90.98235015785697,40.93171482772981],[-90.95755714781623,40.92248877110439],[-90.95444810860346,40.93723008743513],[-90.97078730431456,40.94153383321059]],
      416=>[[-90.97078730431456,40.94153383321059],[-90.95444810860346,40.93723008743513],[-90.94509704729539,40.95039116460471],[-90.96390957166788,40.95425513787649]],
      417=>[[-90.96390957166788,40.95425513787649],[-90.94509704729539,40.95039116460471],[-90.93819434636855,40.96639232930313],[-90.96110782971725,40.96616656945769]],
      418=>[[-90.96110782971725,40.96616656945769],[-90.93819434636855,40.96639232930313],[-90.93443865289512,40.98010074390081],[-90.96786096722266,40.9799764607527]],
      419=>[[-90.96786096722266,40.9799764607527],[-90.93443865289512,40.98010074390081],[-90.93380918394504,40.99309502122177],[-90.96845495214865,40.99331414502754]],
      420=>[[-90.96845495214865,40.99331414502754],[-90.93380918394504,40.99309502122177],[-90.92909618261864,41.00702150176386],[-90.96681678357966,41.00678426898517]],
      423=>[[-90.97729384214298,41.03478445272111],[-90.9282442580571,41.03635289470017],[-90.93161589488885,41.05018398999236],[-90.97758951047388,41.04970589019371]],
      421=>[[-90.96681678357966,41.00678426898517],[-90.92909618261864,41.00702150176386],[-90.92788787035586,41.0218448502922],[-90.97258177744821,41.02070578288729]],
      422=>[[-90.97258177744821,41.02070578288729],[-90.92788787035586,41.0218448502922],[-90.9282442580571,41.03635289470017],[-90.97729384214298,41.03478445272111]],
      424=>[[-90.97758951047388,41.04970589019371],[-90.93161589488885,41.05018398999236],[-90.93692142453519,41.06418858767692],[-90.97052884379737,41.06381381317543]],
      425=>[[-90.97052884379737,41.06381381317543],[-90.93692142453519,41.06418858767692],[-90.93381260470424,41.07940355393613],[-90.95947145761583,41.07798065169445]],
      426=>[[-90.95947145761583,41.07798065169445],[-90.93381260470424,41.07940355393613],[-90.93510557240401,41.09340783562909],[-90.96656768437737,41.0920411343211]],
      427=>[[-90.96656768437737,41.0920411343211],[-90.93510557240401,41.09340783562909],[-90.94238511434475,41.10817292218832],[-90.97512281345088,41.10225217484254]],
      428=>[[-90.97512281345088,41.10225217484254],[-90.94238511434475,41.10817292218832],[-90.94546382254211,41.12190774488611],[-90.97885910839648,41.11481679319834]],
      429=>[[-90.97885910839648,41.11481679319834],[-90.94546382254211,41.12190774488611],[-90.95080535938479,41.13763825679212],[-90.98394807496693,41.12817604164752]],
      430=>[[-90.98394807496693,41.12817604164752],[-90.95080535938479,41.13763825679212],[-90.96663922952227,41.15079085822694],[-90.99281290296938,41.13925928634308]],
      431=>[[-90.99281290296938,41.13925928634308],[-90.96663922952227,41.15079085822694],[-90.98285803185973,41.16377656104464],[-91.00098416471499,41.1466918437728]],
      432=>[[-91.00098416471499,41.1466918437728],[-90.98285803185973,41.16377656104464],[-91.00082487041465,41.17527774577093],[-91.00874181997847,41.14852667173421]],
      433=>[[-91.00874181997847,41.14852667173421],[-91.00082487041465,41.17527774577093],[-91.02218752986931,41.18137700536072],[-91.01937755783804,41.15003712497671]],
      434=>[[-91.01937755783804,41.15003712497671],[-91.02218752986931,41.18137700536072],[-91.06238118059738,41.13586224471959],[-91.03412455295673,41.17234450527518]],
      435=>[[-91.03412455295673,41.17234450527518],[-91.06238118059738,41.13586224471959],[-91.04470431294922,41.18006484051204],[-91.08241245809685,41.16169964917339]],
      436=>[[-91.08241245809685,41.16169964917339],[-91.04470431294922,41.18006484051204],[-91.0551948707209,41.19192642056181],[-91.0962156876613,41.17481411516416]],
      437=>[[-91.0962156876613,41.17481411516416],[-91.0551948707209,41.19192642056181],[-91.06373117344114,41.20363080588014],[-91.1063325541788,41.18706517306583]],
      438=>[[-91.1063325541788,41.18706517306583],[-91.06373117344114,41.20363080588014],[-91.07357917521982,41.2155067023471],[-91.1167558924856,41.19865689752199]],
      439=>[[-91.1167558924856,41.19865689752199],[-91.07357917521982,41.2155067023471],[-91.08121666912639,41.2263900252518],[-91.12826041169319,41.21469897239507]],
      440=>[[-91.12826041169319,41.21469897239507],[-91.08121666912639,41.2263900252518],[-91.0876159897913,41.2364942549445],[-91.12534687156611,41.23016954248944]],
      441=>[[-91.12534687156611,41.23016954248944],[-91.0876159897913,41.2364942549445],[-91.08899059976444,41.24573076491066],[-91.12175421052046,41.24638496590708]],
      442=>[[-91.12175421052046,41.24638496590708],[-91.08899059976444,41.24573076491066],[-91.08808201576059,41.25350130219731],[-91.12089990249552,41.26306903716551]],
      443=>[[-91.12089990249552,41.26306903716551],[-91.08808201576059,41.25350130219731],[-91.08277608013859,41.26690987501802],[-91.11692211259424,41.27798254820844]],
      444=>[[-91.11692211259424,41.27798254820844],[-91.08277608013859,41.26690987501802],[-91.07374723345673,41.28081143528519],[-91.1113678377305,41.29003214742696]],
      445=>[[-91.1113678377305,41.29003214742696],[-91.07374723345673,41.28081143528519],[-91.06879146740522,41.29553767621021],[-91.09242521125014,41.29851499375959]],
      446=>[[-91.09242521125014,41.29851499375959],[-91.06879146740522,41.29553767621021],[-91.06602849276952,41.3052644383144],[-91.08823482780497,41.30792971287418]],
      447=>[[-91.08823482780497,41.30792971287418],[-91.06602849276952,41.3052644383144],[-91.06020199623809,41.32022124973811],[-91.08064463456175,41.3217909103926]],
      448=>[[-91.08064463456175,41.3217909103926],[-91.06020199623809,41.32022124973811],[-91.05512842267778,41.33720429827794],[-91.07641264221913,41.33823128184845]],
      449=>[[-91.07641264221913,41.33823128184845],[-91.05512842267778,41.33720429827794],[-91.05366106100841,41.35032500251171],[-91.0739379171814,41.35142678292879]],
      450=>[[-91.0739379171814,41.35142678292879],[-91.05366106100841,41.35032500251171],[-91.05275901986937,41.36244245302245],[-91.07040231105579,41.36645416154255]],
      451=>[[-91.07040231105579,41.36645416154255],[-91.05275901986937,41.36244245302245],[-91.0436784049907,41.37564417234471],[-91.06085419250688,41.37958901343887]],
      452=>[[-91.06085419250688,41.37958901343887],[-91.0436784049907,41.37564417234471],[-91.04220221501632,41.39365361753089],[-91.05720835866617,41.39067251918827]],
      453=>[[-91.05720835866617,41.39067251918827],[-91.04220221501632,41.39365361753089],[-91.04406431749503,41.40538601699326],[-91.0633018735401,41.40691203377219]],
      454=>[[-91.0633018735401,41.40691203377219],[-91.04406431749503,41.40538601699326],[-91.04373379606905,41.41052720742071],[-91.05163423952251,41.41699234144112]],
      455=>[[-91.05163423952251,41.41699234144112],[-91.04373379606905,41.41052720742071],[-91.02931976572545,41.41855503971725],[-91.0328572546009,41.42608278975555]],
      456=>[[-91.0328572546009,41.42608278975555],[-91.02931976572545,41.41855503971725],[-91.014491582918,41.422979028461],[-91.01912048826134,41.43277857428149]],
      457=>[[-91.01912048826134,41.43277857428149],[-91.014491582918,41.422979028461],[-90.99714464342026,41.42487060501958],[-90.99925686045346,41.43990366369776]],
      458=>[[-90.99925686045346,41.43990366369776],[-90.99714464342026,41.42487060501958],[-90.98269458802373,41.42309110050365],[-90.97227213580146,41.44325459718064]],
      459=>[[-90.97227213580146,41.44325459718064],[-90.98269458802373,41.42309110050365],[-90.96216260830191,41.42009623500729],[-90.95582673055722,41.43686185481421]],
      460=>[[-90.95582673055722,41.43686185481421],[-90.96216260830191,41.42009623500729],[-90.9401945482633,41.4180285140198],[-90.94115238946358,41.43410411251093]],
      461=>[[-90.94115238946358,41.43410411251093],[-90.9401945482633,41.4180285140198],[-90.92070573674803,41.41820292739373],[-90.92302590625016,41.43233609565068]],
      462=>[[-90.92302590625016,41.43233609565068],[-90.92070573674803,41.41820292739373],[-90.90281757445666,41.42181635473762],[-90.90720337983412,41.43441068289069]],
      463=>[[-90.90720337983412,41.43441068289069],[-90.90281757445666,41.42181635473762],[-90.8804169489161,41.42556224627045],[-90.89151553492151,41.43976158330943]],
      464=>[[-90.89151553492151,41.43976158330943],[-90.8804169489161,41.42556224627045],[-90.86125193962113,41.43255666090475],[-90.87394086670139,41.44768419634712]],
      465=>[[-90.87394086670139,41.44768419634712],[-90.86125193962113,41.43255666090475],[-90.85296756533776,41.43482091056742],[-90.85686544012165,41.45571761713665]],
      466=>[[-90.85686544012165,41.45571761713665],[-90.85296756533776,41.43482091056742],[-90.83850707891371,41.43775316892549],[-90.83612580206753,41.45842029555808]],
      467=>[[-90.83612580206753,41.45842029555808],[-90.83850707891371,41.43775316892549],[-90.81910778473805,41.44023906213188],[-90.81579578160753,41.45812364409113]],
      468=>[[-90.81579578160753,41.45812364409113],[-90.81910778473805,41.44023906213188],[-90.79970003179358,41.44135211519289],[-90.79677900949125,41.45821571235599]],
      469=>[[-90.79677900949125,41.45821571235599],[-90.79970003179358,41.44135211519289],[-90.78295723318516,41.43937988586635],[-90.77923021773982,41.45480028536314]],
      470=>[[-90.77923021773982,41.45480028536314],[-90.78295723318516,41.43937988586635],[-90.76228125151724,41.43848056222637],[-90.75857797069449,41.45526673208312]],
      471=>[[-90.75857797069449,41.45526673208312],[-90.76228125151724,41.43848056222637],[-90.74155812873529,41.43841293014096],[-90.74129986697304,41.45392873207133]],
      472=>[[-90.74129986697304,41.45392873207133],[-90.74155812873529,41.43841293014096],[-90.72160661849664,41.44463759905712],[-90.72410622464567,41.45527364822565]],
      473=>[[-90.72410622464567,41.45527364822565],[-90.72160661849664,41.44463759905712],[-90.70364472745545,41.446415668045],[-90.7041274333198,41.45786933125446]],
      474=>[[-90.7041274333198,41.45786933125446],[-90.70364472745545,41.446415668045],[-90.68031730188827,41.44567946835805],[-90.68759802242619,41.46032658481339]],
      475=>[[-90.68759802242619,41.46032658481339],[-90.68031730188827,41.44567946835805],[-90.66699979606632,41.45681519842793],[-90.66702910960484,41.46514508917074]],
      476=>[[-90.66702910960484,41.46514508917074],[-90.66699979606632,41.45681519842793],[-90.63344843995473,41.45221935165051],[-90.65657718563965,41.46949488984797]],
      477=>[[-90.65657718563965,41.46949488984797],[-90.63344843995473,41.45221935165051],[-90.63509744573608,41.47303945911423],[-90.64034645199828,41.4774154619168]],
      478=>[[-90.64034645199828,41.4774154619168],[-90.63509744573608,41.47303945911423],[-90.617486830184,41.48088370542879],[-90.62425550599895,41.48662487870652]],
      479=>[[-90.62425550599895,41.48662487870652],[-90.617486830184,41.48088370542879],[-90.60404311701011,41.49180558200741],[-90.61073943780512,41.49459057955315]],
      480=>[[-90.61073943780512,41.49459057955315],[-90.60404311701011,41.49180558200741],[-90.59755934315619,41.50443881426396],[-90.60571003154891,41.51055979390778]],
      481=>[[-90.60571003154891,41.51055979390778],[-90.59755934315619,41.50443881426396],[-90.58113556831556,41.51200304813109],[-90.58403075588232,41.51763670388024]],
      482=>[[-90.5811256857077,41.51201485900806],[-90.57633351284976,41.5130259276031],[-90.56606024159272,41.51110682661161],[-90.55953411819094,41.51032368080836],[-90.56453103223885,41.51773505871055],[-90.56737615759825,41.51607732772189],[-90.57120149135591,41.5197672665899],[-90.58399811597744,41.51757650478604],[-90.5811256857077,41.51201485900806]],
      483=>[[-90.56690578029767,41.52120571329969],[-90.56506525237579,41.51856761126993],[-90.56213678265219,41.51984969809591],[-90.56160589489959,41.5193919806723],[-90.56451209561448,41.51774150477866],[-90.55969018213969,41.51059792472956],[-90.54554576608521,41.50964638997059],[-90.54810260646045,41.52947278977826],[-90.55724602488634,41.52657412554857],[-90.56690578029767,41.52120571329969]],    
      484=>[[-90.54808920603612,41.52939278853504],[-90.54552841799722,41.50964503103194],[-90.53372071448936,41.51035784153727],[-90.52892484428197,41.52601736034169]],
      485=>[[-90.52892484428197,41.52601736034169],[-90.53372071448936,41.51035784153727],[-90.5092203536731,41.51372097487243],[-90.50971806363766,41.52215220467504]],
      486=>[[-90.50971806363766,41.52215220467504],[-90.5092203536731,41.51372097487243],[-90.48856266269104,41.5145424556308],[-90.48875678287305,41.52140202400295]],
      487=>[[-90.48875678287305,41.52140202400295],[-90.48856266269104,41.5145424556308],[-90.47036467716465,41.51537456609466],[-90.47251555885472,41.52437816051497]],
      488=>[[-90.47251555885472,41.52437816051497],[-90.47036467716465,41.51537456609466],[-90.45000250745086,41.52480546208061],[-90.45698288389242,41.53057735758976]],
      489=>[[-90.45698288389242,41.53057735758976],[-90.45000250745086,41.52480546208061],[-90.43804967962095,41.53668343008653],[-90.4461928429114,41.54182560886835]],
      490=>[[-90.4461928429114,41.54182560886835],[-90.43804967962095,41.53668343008653],[-90.42465891516093,41.54714647168962],[-90.43225148614556,41.55492191671779]],
      491=>[[-90.43225148614556,41.55492191671779],[-90.42465891516093,41.54714647168962],[-90.41359632007243,41.55879211219473],[-90.42215634673808,41.56423876538352]],
      492=>[[-90.42215634673808,41.56423876538352],[-90.41359632007243,41.55879211219473],[-90.40121765684347,41.56578132917156],[-90.40755589318907,41.57200066107595]],
      493=>[[-90.40755589318907,41.57200066107595],[-90.40121765684347,41.56578132917156],[-90.38766103940617,41.57132529050489],[-90.39384285792221,41.57842796885789]],
      494=>[[-90.39384285792221,41.57842796885789],[-90.38766103940617,41.57132529050489],[-90.37097459099577,41.57455780093269],[-90.37455561078977,41.58171517893158]],
      
      "leclaire_slough"=>[[-90.40269779323413,41.57414094488603],[-90.38079203649197,41.58089166612812],[-90.3940984980793,41.5828369604891],[-90.40181802959434,41.57954450704569],[-90.4052476417921,41.57425936393617],[-90.40269779323413,41.57414094488603]],
      
      495=>[[-90.37455561078977,41.58171517893158],[-90.37097459099577,41.57455780093269],[-90.3498980145362,41.58193114855811],[-90.35418070340366,41.5875726488084]],
      496=>[[-90.35418070340366,41.5875726488084],[-90.3498980145362,41.58193114855811],[-90.33608085417411,41.59502112101575],[-90.34328730016247,41.59576427084198]],
      497=>[[-90.34328730016247,41.59576427084198],[-90.33608085417411,41.59502112101575],[-90.33646143861851,41.6111032102589],[-90.34404272829823,41.61119012348694]],
      498=>[[-90.34404272829823,41.61119012348694],[-90.33646143861851,41.6111032102589],[-90.33663122233754,41.62387063319586],[-90.3472745860646,41.62454773858045]],
      499=>[[-90.3472745860646,41.62454773858045],[-90.33663122233754,41.62387063319586],[-90.3381794138162,41.63955239006518],[-90.3480736269221,41.63971945269969]],

      "lakepotter"=>[[-90.60291821936136,41.49354089561368],[-90.60515330401103,41.48873653233955],[-90.60835728780469,41.48558344711035],[-90.6041038102251,41.48389113738474],[-90.60037739863891,41.48436362602704],[-90.5969213240148,41.48903959660949],[-90.59657901636372,41.4922469460371],[-90.60291821936136,41.49354089561368]],

      "credit_island_slough"=>[[-90.63134741941096,41.48485323562083],[-90.62120203043624,41.48797893652774],[-90.61548073260025,41.49230296379835],[-90.60887864874843,41.50279539867355],[-90.61216663721751,41.50665860975543],[-90.61909167271669,41.50337113210738],[-90.63134741941096,41.48485323562083]],

      500=>[[-90.3480736269221,  41.63971945269969],  [-90.33817941381621,41.63955239006518], [-90.33649979303949, 41.65484790099703],  [-90.34380831321272, 41.65683003496228]  ],
      501=>[[-90.34380831321272, 41.65683003496228],  [-90.33649979303949,41.65484790099703], [-90.3286147300638,  41.66790001449647],  [-90.33988256792307, 41.66828476005874]  ],
      502=>[[-90.33988256792307, 41.66828476005874],  [-90.3286147300638,41.66790001449647],  [-90.32843393740198, 41.6798418644646],   [-90.33882199131011, 41.68036827724283]  ],
      503=>[[-90.33882199131011, 41.68036827724283],  [-90.32843393740198,41.6798418644646],  [-90.31540075610307, 41.68607027095535],  [-90.32382303252616, 41.69122269168967]  ],
      504=>[[-90.32382303252616, 41.69122269168967],  [-90.31540075610307,41.68607027095535], [-90.31077421309571, 41.70093421981962],  [-90.31560815565506, 41.70162133249737]  ],
      505=>[[-90.31560815565506, 41.70162133249737],  [-90.31077421309571,41.70093421981962], [-90.3144828164786,  41.71893714129034],  [-90.32324160813617, 41.71865527148766]  ],
      506=>[[-90.32324160813617, 41.71865527148766],  [-90.3144828164786,41.71893714129034],  [-90.31219715829357, 41.73209034176453],  [-90.32043157100178, 41.73305742526379]  ],
      507=>[[-90.32043157100178, 41.73305742526379],  [-90.31219715829357,41.73209034176453], [-90.30381674016407, 41.74473810650169],  [-90.30911551889101, 41.74805205206862]  ],
      508=>[[-90.30911551889101, 41.74805205206862],  [-90.30381674016407,41.74473810650169], [-90.29012440316585, 41.7570342469618],   [-90.29387889379554, 41.75940105234584]  ],
      509=>[[-90.29387889379554, 41.75940105234584],  [-90.29012440316585,41.7570342469618],  [-90.27848788377898, 41.76498972749543],  [-90.28216840054604, 41.76853414046849]  ],
      510=>[[-90.28216840054604, 41.76853414046849],  [-90.27848788377898,41.76498972749543], [-90.26200151315392, 41.770651247585950],  [-90.2654809443937,  41.77464017600214]  ],
      511=>[[-90.2654809443937,  41.77464017600214],  [-90.26200151315392,41.770651247585950],  [-90.24263626100766, 41.77880910965498], [-90.24800719074986, 41.7843434632554]  ],
      512=>[[-90.24800719074986, 41.7843434632554],   [-90.24263626100766,41.77880910965498], [-90.2284317808665,  41.78595112826723],  [-90.23473410036074, 41.79168622191222] ], 
      513=>[[-90.236808, 41.793668],  [-90.2284317808665,41.78595112826723],  [-90.21337944364016, 41.79404084443492],  [-90.2156953508097,  41.7973419581181]   ],
      514=>[[-90.2156953508097,  41.7973419581181],   [-90.21337944364016,41.79404084443492], [-90.19581674354208, 41.79898355228364],  [-90.19822143802581, 41.8025198609788]   ],
      515=>[[-90.19822143802581, 41.8025198609788],   [-90.19581674354208,41.79898355228364], [-90.17633565144088, 41.80648691881999],  [-90.18352536643455, 41.80932693789443]  ],
      516=>[[-90.18352536643455, 41.80932693789443],  [-90.17633565144088,41.80648691881999], [-90.18032482162711, 41.82393548957531],  [-90.18485994749022, 41.8234823269278]   ],
      517=>[[-90.18479951416624,41.82345405381364], [-90.18034156127018,41.82386697419022], [-90.17363844972714,41.83741256126471], [-90.18528711883474,41.83738488833541], [-90.18479951416624,41.82345405381364]  ],
      518=>[[-90.18498674961879,41.83745413025019], [-90.17426449496931,41.83754713555957], [-90.17186371262994,41.84544262688185], [-90.17279839780834,41.85034247434979], 
      [-90.17906452226369,41.85124828595436], [-90.18246236901253,41.84681288842535], [-90.18498674961879,41.83745413025019]    ],
      519=>[[-90.17908346056349, 41.8513020234478],   [-90.17295527825956,41.850379130804],   [-90.17058699252856, 41.86429560522607],  [-90.17610039282224, 41.86515500754595]  ],
      520=>[[-90.17610039282224, 41.86515500754595],  [-90.17058699252856,41.86429560522607], [-90.16660198044828, 41.8760873927711],   [-90.17297767304423, 41.87737306056449]  ],
      521=>[[-90.17297767304423, 41.87737306056449],  [-90.16660198044828,41.8760873927711],  [-90.15871961546813, 41.88892630366035],   [-90.16238975538499, 41.89065244219969]  ],
      522=>[[-90.16238975538499, 41.89065244219969], [-90.15871961546813,41.88892630366035], [-90.151909, 41.903010], [-90.167240, 41.903965]],
      523=>[[-90.167240, 41.903965], [-90.151909, 41.903010], [-90.147937, 41.916824], [-90.164227, 41.916904]],
      524=>[[-90.164227, 41.916904], [-90.147937, 41.916824], [-90.150351, 41.928544], [-90.178143, 41.928487]],
      525=>[[-90.178143, 41.928487], [-90.150351, 41.928544], [-90.154714, 41.940933], [-90.170325, 41.941093]],
      526=>[[-90.170325, 41.941093], [-90.154714, 41.940933], [-90.154570, 41.955656], [-90.169716, 41.956191]],
      527=>[[-90.169716, 41.956191], [-90.154570, 41.955656], [-90.150207, 41.966624], [-90.165536, 41.971451]],
      528=>[[-90.165536, 41.971451], [-90.150207, 41.966624], [-90.128595, 41.983866], [-90.160597, 41.983653]],
      529=>[[-90.160597, 41.983653], [-90.128595, 41.983866], [-90.129745, 41.998937], [-90.159155, 41.998832]],
      530=>[[-90.159155, 41.998832], [-90.129745, 41.998937], [-90.126528, 42.012881], [-90.160529, 42.010256]],
      531=>[[-90.160529, 42.010256], [-90.126528, 42.012881], [-90.136450, 42.027552], [-90.162754, 42.025086]],
      532=>[[-90.162754, 42.025086], [-90.136450, 42.027552], [-90.15151752534508, 42.03730169372241],  [-90.16707877390979,42.03622934427685]],  
      533=>[[-90.16707877390979,42.03622934427685],  [-90.15151752534508,42.03730169372241], [-90.16066649304122, 42.04930465441836],  [-90.17331330299072,42.04868745730436]  ],
      534=>[[-90.17331330299072,42.04868745730436],  [-90.16066649304122,42.04930465441836], [-90.16266001168944, 42.06507225175709],  [-90.16873927252988,42.06458933574678]  ],
      535=>[[-90.16873927252988,42.06458933574678],  [-90.16266001168944,42.06507225175709], [-90.16249823994366, 42.07970814767357],  [-90.16914609409496, 42.0804515612181],   ],
      536=>[[-90.16914609409496, 42.0804515612181],   [-90.16249823994366,42.07970814767357], [-90.1579947493362,  42.09136054497117],  [-90.16729803875997, 42.09221812981502]  ],
      537=>[[-90.16729803875997, 42.09221812981502],  [-90.1579947493362,42.09136054497117],  [-90.15894760458957, 42.10600456364353],  [-90.16382083849952, 42.10622273166468]  ],
      538=>[[-90.16382083849952, 42.10622273166468],  [-90.15894760458957,42.10600456364353], [-90.16024166340684, 42.12179322620005],  [-90.16773051913361, 42.11833177709393]  ],
      539=>[[-90.16773051913361, 42.11833177709393],  [-90.16024166340684,42.12179322620005], [-90.18304430150994, 42.12795599576975],  [-90.18197341024099, 42.12474496670414]  ],

      540=>[[-90.18072233173214,42.12134833833771],[-90.18304430150994,42.12795599576975],[-90.19645802930619,42.13138138502153],[-90.20521555330315,42.12227668945038]],
      541=>[[-90.20521555330315,42.12227668945038],[-90.19645802930619,42.13138138502153],[-90.19626296893350,42.14450847116228],[-90.21761847653428,42.13887557152060]],
      542=>[[-90.21761847653428,42.13887557152060],[-90.19626296893350,42.14450847116228],[-90.20235150278525,42.15761424628353],[-90.22062978816405,42.15098708916295]],
      543=>[[-90.22062978816405,42.15098708916295],[-90.20235150278525,42.15761424628353],[-90.22273756143507,42.16847045213160],[-90.23271973921307,42.15646395865959]],
      544=>[[-90.23271973921307,42.15646395865959],[-90.22273756143507,42.16847045213160],[-90.24105026785845,42.17550788257662],[-90.24803508604180,42.16392077574721]],
      545=>[[-90.24803508604180,42.16392077574721],[-90.24105026785845,42.17550788257662],[-90.25924673944463,42.18125490290713],[-90.26434198064129,42.16728490549481]],
      546=>[[-90.26434198064129,42.16728490549481],[-90.25924673944463,42.18125490290713],[-90.27828253146464,42.18568003647120],[-90.28391473556665,42.17243420264212]],
      547=>[[-90.28391473556665,42.17243420264212],[-90.27828253146464,42.18568003647120],[-90.29346853871149,42.19231892903666],[-90.30206262337461,42.18109039706414]],
      548=>[[-90.30206262337461,42.18109039706414],[-90.29346853871149,42.19231892903666],[-90.31017076692822,42.19677184336619],[-90.31741432400432,42.18812089196933]],
      549=>[[-90.31741432400432,42.18812089196933],[-90.31017076692822,42.19677184336619],[-90.32632375095100,42.20588201957045],[-90.33306646758962,42.19557453626149]],
      550=>[[-90.33306646758962,42.19557453626149],[-90.32632375095100,42.20588201957045],[-90.34156596426730,42.21768994092384],[-90.35257239658488,42.19948705665485]],
      551=>[[-90.35257239658488,42.19948705665485],[-90.34156596426730,42.21768994092384],[-90.36032385531085,42.22203989211862],[-90.36920107811380,42.20487880828650]],
      552=>[[-90.36920107811380,42.20487880828650],[-90.36032385531085,42.22203989211862],[-90.37509934505240,42.22365806070458],[-90.38543894968876,42.21291372872307]],
      553=>[[-90.38543894968876,42.21291372872307],[-90.37509934505240,42.22365806070458],[-90.38824615662774,42.23387492338389],[-90.40042187251275,42.22360654637048]],
      554=>[[-90.40042187251275,42.22360654637048],[-90.38824615662774,42.23387492338389],[-90.40019743364833,42.24365202199954],[-90.41117169670085,42.23760406161571]],
      555=>[[-90.41117169670085,42.23760406161571],[-90.40019743364833,42.24365202199954],[-90.40602282310066,42.25542235867358],[-90.42256570755437,42.24969666940589]],
      556=>[[-90.42256570755437,42.24969666940589],[-90.40602282310066,42.25542235867358],[-90.41153907297101,42.26799085422678],[-90.42726018691387,42.26429140495284]],
      557=>[[-90.42726018691387,42.26429140495284],[-90.41153907297101,42.26799085422678],[-90.40324229022508,42.28092049494015],[-90.43179962165705,42.27786927289465]],
      558=>[[-90.43179962165705,42.27786927289465],[-90.40324229022508,42.28092049494015],[-90.40628994528976,42.29237224400381],[-90.43408398149786,42.29315103311721]],
      559=>[[-90.43408398149786,42.29315103311721],[-90.40628994528976,42.29237224400381],[-90.40341580341470,42.30556598838324],[-90.43398062550945,42.30715099334995]],
      560=>[[-90.43398062550945,42.30715099334995],[-90.40341580341470,42.30556598838324],[-90.40202390677898,42.31961007388099],[-90.43218205178940,42.32012182733066]],
      561=>[[-90.43218205178940,42.32012182733066],[-90.40202390677898,42.31961007388099],[-90.40228612384961,42.33568289175953],[-90.43144592054718,42.33090746368829]],
      562=>[[-90.43144592054718,42.33090746368829],[-90.40228612384961,42.33568289175953],[-90.42115064617572,42.35347868724634],[-90.43838258819002,42.34211810409654]],
      563=>[[-90.43838258819002,42.34211810409654],[-90.42115064617572,42.35347868724634],[-90.43222518656329,42.36224871022389],[-90.44891589082231,42.35144491044382]],
      564=>[[-90.44891589082231,42.35144491044382],[-90.43222518656329,42.36224871022389],[-90.44615033245869,42.37521948306144],[-90.46169366850577,42.36428467835993]],
      565=>[[-90.46169366850577,42.36428467835993],[-90.44615033245869,42.37521948306144],[-90.45917650250760,42.38460475889262],[-90.47343915242021,42.37224284770302]],
      566=>[[-90.47343915242021,42.37224284770302],[-90.45917650250760,42.38460475889262],[-90.47415580710189,42.39469571763775],[-90.48977015538519,42.38316509452433]],
      567=>[[-90.48977015538519,42.38316509452433],[-90.47415580710189,42.39469571763775],[-90.48874789507349,42.40483018745399],[-90.50205463858384,42.39198447275029]],
      568=>[[-90.50205463858384,42.39198447275029],[-90.48874789507349,42.40483018745399],[-90.50912272226023,42.41582778954614],[-90.51962544522260,42.40127174140468]],
      569=>[[-90.51962544522260,42.40127174140468],[-90.50912272226023,42.41582778954614],[-90.52535334577914,42.42199393220037],[-90.53408698279736,42.40718628646119]],
      570=>[[-90.53408698279736,42.40718628646119],[-90.52535334577914,42.42199393220037],[-90.54493141888224,42.42774516716232],[-90.55141778445802,42.41263839375144]],
      571=>[[-90.55141778445802,42.41263839375144],[-90.54493141888224,42.42774516716232],[-90.54763994538814,42.42962140336216],[-90.57101143567522,42.42055440742370]],
      572=>[[-90.57101143567522,42.42055440742370],[-90.54763994538814,42.42962140336216],[-90.56131550433221,42.44051831322754],[-90.58273721223038,42.42980757939554]],
      573=>[[-90.58273721223038,42.42980757939554],[-90.56131550433221,42.44051831322754],[-90.57884414483848,42.45044632362330],[-90.59097296836788,42.43695362214855]],
      574=>[[-90.59097296836788,42.43695362214855],[-90.57884414483848,42.45044632362330],[-90.59594192639597,42.46166608643688],[-90.60593165611589,42.44702038973981]],
      575=>[[-90.60593165611589,42.44702038973981],[-90.59594192639597,42.46166608643688],[-90.61151416087836,42.46844925102864],[-90.62172652751784,42.45417303869883]],
      576=>[[-90.62172652751784,42.45417303869883],[-90.61151416087836,42.46844925102864],[-90.62600880152826,42.47682454436409],[-90.63654393748268,42.46124440154581]],
      577=>[[-90.63654393748268,42.46124440154581],[-90.62600880152826,42.47682454436409],[-90.63833392730551,42.48494585602646],[-90.65275994566505,42.47177806713515]],
      578=>[[-90.65275994566505,42.47177806713515],[-90.63833392730551,42.48494585602646],[-90.64650896863967,42.48788020041317],[-90.66137798043898,42.48771789822653]],
    

      "joyce_slough_clinton"=>[[-90.18113977068387,41.84969050733152],[-90.18335640705277,41.8535932333937],[-90.18208047479796,41.85684920921347],[-90.18193643281008,41.85958144157842],[-90.1826791567711,41.85800745373139],[-90.18349041190636,41.85540279712485],[-90.18386461141273,41.85437666758686],[-90.18390321122021,41.85326326280958],[-90.18326035024323,41.85206672099292],[-90.18220825187096,41.84967199833547],[-90.18200461908395,41.84804548194436],[-90.181037,41.847867],[-90.17909172195476,41.85126707735829],[-90.18113977068387,41.84969050733152]],

      "albany"=>[[-90.27515035952995,41.75674530469114],  [-90.25720788319468,41.76494014559641],  [-90.25782420656908,41.76892319694783],  [-90.2681668076286,41.76756818218026], [-90.27837794161196,41.7647960627926],  [-90.27515035952995,41.75674530469114] ],

      "camanche"=>[[-90.24411274997723,41.7867227592737],[-90.24052772077873,41.79191920668919],[-90.24483821902118,41.79315328700208],[-90.24866415680138,41.78655999605407],[-90.24948281326756,41.78435425727831],[-90.24892321653469,41.78381433943699],[-90.24411274997723,41.7867227592737]],

      "beaver"=> [[-90.23294839981214, 41.79808538536009], [-90.22701749141592,41.80756903332713], [-90.21559749792131, 41.81230821223932], [-90.20557127592812, 41.81802061899466], [-90.19441158230757, 41.82295207417607], [-90.1852557317826, 41.82723424579132], [-90.1864738578501, 41.82944337432793], [-90.19083424544831, 41.82723719598464], [-90.19632708046788, 41.82542118488396], [-90.20330171463473, 41.82315092259923], [-90.21080006723422, 41.81912672727466], [-90.21638017690674, 41.81568600506505], [-90.22631847832557, 41.81192101655164], [-90.23652024451495, 41.80341254671695], [-90.23852907095876, 41.79282295356613], [-90.2343452764614, 41.79288804500343], [-90.23294839981214, 41.79808538536009]],

      "sabula"=> [[-90.16917288193625,42.06032208154448],[-90.16901335882697,42.06274636281189],[-90.17070309171807,42.06250890705313],[-90.17166206922242,42.0620511009892],[-90.17118231549374,42.06072880609142],[-90.17220933933675,42.05793152988566],[-90.1706795005182,42.05769432506564],[-90.16917288193625,42.06032208154448] ]


    ];
   
    // 6/7/2025 override range to top down check of all no matter the region.  
    $range =   [578, 577, 576, 575, 574, 573, 572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539, 538, 537, 536, 535, 'sabula', 534, 533, 532, 531, 530, 529, 528, 527, 526, 525, 524, 523, 522, 521, 520, 'joyce_slough_clinton', 519, 518, 'beaver', 517, 516, 515, 514, 513, 'camanche', 512, 511, 'albany', 510, 509, 508, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 496, 495, 'leclaire_slough', 494, 493, 492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 'credit_island_slough', 'lakepotter', 464, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360];

    $wp     = $this->determineWaypoint($suppressTrigger);

    foreach($range as $m) {
      $inside = $this->isInsidePoly($this->point, $polys[$m]);   
      if($inside) {
        //Use location data to build event code
        if($this->live->liveDirection=="upriver") {
          $dir = "u";   $um  = $m;
        } else {
          $dir = "d";
          //Offset ($m + 1) restored 08/11/23   
          $um = is_int($m) ? ($m+1) : $m; //Shows polygon entry at upper mile line for downriver movement
        }
        $mileMarker = "m".$um;
        //description is an array containing [0] short text for status and [1] longer text for speech conversion
        $this->description = ZONE::$$mileMarker;
        $eventTS = time();
        $type  = strpos($this->live->liveVessel->vesselType, "assenger") ? "p" : "a";
        //Make type=p if on vessel watch list (even if non-passenger)
        $type = $this->live->liveVessel->vesselWatchOn==true ? 'p' : $type;
        if(is_int($um)) { //Numbered mile marker zones
          $event = "m".$um.$dir.$type;          
        } else {         //Named zones          
          //Concatanate event
          switch($um) {
            case "beaver": 
              $event = "beaver".$dir."a";  break;
            case "camanche":
              $event = "camanche";      break;
            case "albany":
              $event = "albany";        break;
            case "sabula":
              $event = "sabula";        break;
            case "joyce_slough_clinton": 
              $event = "joyce_slough_clinton"; break;  
            default:
              $event = $um;            
          }           
        }
        $this->lastMM = $this->mm;
        $this->mm = $mileMarker;
        if($this->isNewEvent($event, $suppressTrigger)) {
            flog( "\033[43m   ...".$this->live->liveName." at ".$event.".\033[0m\n\n");  
            $this->live->PlotDaemon->AlertsModel->triggerEvent($this->event, $this->live);
        }
        break;        
      }  
    }
    if($inside==false) {
      $this->description = ["undetermined location", "at an as yet undetermined Location.", 1000];
      flog( "        ...search for ".$this->live->liveName." ended at ".$m." \r\n");
    }
    if(count($this->description)==0) {
        $this->description = ["location ?", "at an undetected Location.", 1000];
      flog( "   ".$this->live->liveName." recorded mile ".$m." but description was missing.\r\n");
    }
  }




  public function determineWaypoint($suppressTrigger) {
    $order = ["alpha", "bravo", "charlie", "delta", "echo", "foxtrot", "golf", "hotel"];
    
    $uppolys = [
        "alpha"=>[[-90.18175807981993,41.93844045624406],[-90.10727770274339,41.93882767095748],[-90.1101870716209,41.95419516583935],[-90.18037280493806,41.9581122371572],[-90.18175807981993,41.93844045624406]],
        "bravo"=>[[-90.17384402924193,41.89723456537121],[-90.16139831396862,41.89740471269587],[-90.15576676739707,41.89351051784009],[-90.15150895061544,41.90301603971255],[-90.16373919373072,41.90338521344362],[-90.16894635958988,41.89940369517984],[-90.17320673261528,41.89797039505211],[-90.17384402924193,41.89723456537121]],
        "charlie"=>[[-90.1864769246679,41.83594420662106],[-90.16944526162933,41.83608109650705],[-90.16947457995353,41.85004013577833],[-90.18252421835456,41.85025384278654],[-90.1864769246679,41.83594420662106]],
        "delta"=>[[-90.21429864522167,41.79989690763232],[-90.17539739092251,41.79972232963831],[-90.1836240759211,41.80911418702139],[-90.21418401179969,41.80113158192712],[-90.21429864522167,41.79989690763232]],
        
        "echo"=>[[-90.3629940774167,41.57612132335647],[-90.3569378981675,41.5789128376834],[-90.35459710773206,41.58740275625333],[-90.36715827747643,41.58323092264241],[-90.3629940774167,41.57612132335647]],
        "foxtrot"=>[[-90.40234831475011,41.57399148505885],[-90.40192049550757,41.57352528493669],[-90.40009228575911,41.57424706811361],[-90.39527617109974,41.56831545610599],[-90.38792035230348,41.57137232977288],[-90.39272266858319,41.5757209697276],[-90.39413867412868,41.57805243644815],[-90.39793087734567,41.57595248689903],[-90.40234831475011,41.57399148505885]],
        "golf"=>[[-90.57119718322605,41.5197727920422],[-90.56957251022988,41.51493838303466],[-90.56162979231036,41.51941134974355],[-90.56211369554093,41.51984963255459],[-90.56609663118097,41.51809415925702],[-90.56796101611982,41.52079186696324],[-90.57119718322605,41.5197727920422]],
        "hotel"=>[[-90.62941710558779,41.47628754238154],[-90.61969128010372,41.48105768955362],[-90.62519884641524,41.48689561961041],[-90.63545057217139,41.48103548137976],[-90.62941710558779,41.47628754238154]]
    ];

    $dnpolys = [
        "alpha"=>[[-90.18023171081028,41.92822620690882],[-90.12922378161221,41.92585784562771],[-90.10794316028831,41.94046140766186],[-90.18141896112733,41.93969472685462],[-90.18023171081028,41.92822620690882]],
        "bravo"=>[[-90.17384402924193,41.89723456537121],[-90.16139831396862,41.89740471269587],[-90.15576676739707,41.89351051784009],[-90.15150895061544,41.90301603971255],[-90.16373919373072,41.90338521344362],[-90.16894635958988,41.89940369517984],[-90.17320673261528,41.89797039505211],[-90.17384402924193,41.89723456537121]],
        "charlie"=>[[-90.18670223903518,41.83023340830405],[-90.17114833843958,41.82975357100782],[-90.16905537691486,41.83688562511055],[-90.18689095019816,41.83662425531738],[-90.18670223903518,41.83023340830405]],
        "delta"=>[[-90.21753349647736,41.79943767319528],[-90.21333792859896,41.79395362167281],[-90.1870558339624,41.80145364281677],[-90.20882580767872,41.80164711748697],[-90.21753349647736,41.79943767319528]],
        "echo"=>[[-90.37455258751223,41.58171239423995],[-90.37079867884374,41.57455151513277],[-90.36222621928434,41.57654348944093],[-90.36603975144148,41.58335417612248],[-90.37455258751223,41.58171239423995]],
        "foxtrot"=>[[-90.40662438201728,41.57460526046725],[-90.39956087781775,41.56697139101282],[-90.3949711632937,41.56863748242898],[-90.3997376748238,41.57444884847366],[-90.39749831665003,41.57525119519553],[-90.3978494807305,41.57587256923827],[-90.40662438201728,41.57460526046725]],
        "golf"=>[[-90.57119718322605,41.5197727920422],[-90.56957251022988,41.51493838303466],[-90.56162979231036,41.51941134974355],[-90.56211369554093,41.51984963255459],[-90.56609663118097,41.51809415925702],[-90.56796101611982,41.52079186696324],[-90.57119718322605,41.5197727920422]],
        "hotel"=>[[-90.64019441700943,41.47743654658274],[-90.63512116169886,41.47315588085525],[-90.62868674032384,41.47695338950061],[-90.63470038478822,41.48145706440016],[-90.64019441700943,41.47743654658274]]
    ];

    //Tests if a waypoint was reached seperate from the mile zone check
    if($this->live->liveDirection=="upriver") {
       foreach($order as $wpName) {
            $isInside = $this->isInsidePoly($this->point, $uppolys[$wpName]);
            if($isInside) {
                if($this->isNewWaypoint($wpName, false)) {
                    $wsConcat = "liveMarker".ucfirst($wpName)."WasReached";
                    $tsConcat = "liveMarker".ucfirst($wpName)."TS";
                    $this->live->$wsConcat = true;
                    $this->live->$tsConcat = time();
                    //Convert to event code and trigger
                    $type  = strpos($this->live->liveVessel->vesselType, "assenger") ? "p" : "a";
                    $event = $wpName."u".$type;
                    //Test that event is new to avoid duplicates
                    if($this->isNewEvent($event, $suppressTrigger)) {
                        flog("\33[42m      ...$wpName waypoint was reached by ".$this->live->liveName." traveling Upriver.\033[0m\n\n");
                        $this->live->PlotDaemon->AlertsModel->triggerEvent($event, $this->live);
                    }
                }
            }
       }
    } else if($this->live->liveDirection=="downriver") {
        foreach($order as $wpName) {
            $isInside = $this->isInsidePoly($this->point, $dnpolys[$wpName]);
            if($isInside) {
                if($this->isNewWaypoint($wpName, false)) {
                    $wsConcat = "liveMarker".ucfirst($wpName)."WasReached";
                    $tsConcat = "liveMarker".ucfirst($wpName)."TS";
                    $this->live->$wsConcat = true;
                    $this->live->$tsConcat = time();
                    //Convert to event code and trigger
                    $type  = strpos($this->live->liveVessel->vesselType, "assenger") ? "p" : "a";
                    $event = $wpName."d".$type;
                    //Test that event is new to avoid duplicates
                    if($this->isNewEvent($event, $suppressTrigger)) {
                        flog("\33[42m      ...$wpName waypoint was reached by ".$this->live->liveName." traveling Upriver.\033[0m\n\n");
                        $this->live->PlotDaemon->AlertsModel->triggerEvent($event, $this->live);
                    }
                }
            }
        }
    }
   
  }





  public function determineRegion() { //Returns "clinton" | "qc" | "outside"   
    $polys = [
      "clinton"=>[[-90.40442979930886,41.64853256352074],[-90.15778581315564,41.63841309385977],[-90.03872174379546,42.14125586423691],[-90.58156429591769,42.49319523389899],[-90.64951054036128,42.43258806010382],[-90.30601547693708,42.08518912680928],[-90.40442979930886,41.64853256352074]],
      "qc"=>[[-90.15918561340592,41.63731381803267],[-90.40375392359645,41.64698185704191],[-91.1443998108527,41.41024258877019],[-90.46229684338448,41.39866172374725],[-90.15918561340592,41.63731381803267]]
    ];
    $this->setPoint();
    if($this->isInsidePoly($this->point, $polys["clinton"])) {
      flog("        determineRegion(".$this->live->liveName.") = CLINTON \r\n");
      return "clinton";
    } else if($this->isInsidePoly($this->point, $polys["qc"])) {
      flog("        determineRegion(".$this->live->liveName.") = QC \r\n");
      return "qc";
    } else {
      flog("        determineRegion(".$this->live->liveName.") = \33[42m NOT IN REGION \033[0m\r\n");
      return "outside";
    }
  }

  public function determineCamera() { //Refactored 4/9/23 to include sawmill camera & its zoom. Returns name "A", "B" or "C"; zoom 0, 1, 2 or 3; or false
    $polys = [
        "CabinDR"=>[[-90.19574154245394,41.79894380177605],[-90.19848987767594,41.80275731583387],[-90.2110598422512,41.80023522493453],[-90.20863976055016,41.79535621390145],[-90.19574154245394,41.79894380177605]],
        "CabinUR"=>[[-90.18665777418799,41.80172331446524],[-90.18241924324515,41.80447550087962],[-90.18382325251146,41.80785938852225],[-90.19848702798852,41.80279497988711],[-90.19566956157554,41.79887548569596],[-90.18665777418799,41.80172331446524]],
        "SawmillCenter"=>[[-90.16827037644022,41.87004726698395],[-90.17365220400626,41.87108032268587],[-90.17456711490483,41.86859361124102],[-90.16922724177618,41.86689929036727],[-90.16827037644022,41.87004726698395]],
        "SawmillLeft"=>[[-90.16501264098754,41.87894741988096],[-90.17251063427827,41.87884147250501],[-90.17363457771249,41.8711105382974],[-90.16823146186927,41.87006671607528],[-90.16501264098754,41.87894741988096]],
        "SawmillRight"=>[[-90.16915895992925,41.86684393093491],[-90.17447976000039,41.86855724499563],[-90.17650722879176,41.86370945812324],[-90.17059025504298,41.86313198828161],[-90.16915895992925,41.86684393093491]],
        "HistoricalSoc"=>[ [-90.18457852931127,41.84040938998683],[-90.18629171882891,41.83629778523537],[-90.18317858141694,41.83617619617841],[-90.18043377301612,41.84005278002021],[-90.18457852931127,41.84040938998683]],
        "PortByron"=>[[-90.34560916817786,41.59728973502824],[-90.37091728033306,41.58296584862744],[-90.36600977114223,41.57450758309864],[-90.32642276069751,41.58785151532669],[-90.33345942287909,41.5967937623308],[-90.34560916817786,41.59728973502824]]
       
    ];

    $this->setPoint();
    $isInCamA     = $this->isInsidePoly($this->point, $polys["CabinDR"]);
    $isInCamB     = $this->isInsidePoly($this->point, $polys["CabinUR"]);
    $isInCamCLeft = $this->isInsidePoly($this->point, $polys["SawmillLeft"]);
    $isInCamCCent = $this->isInsidePoly($this->point, $polys["SawmillCenter"]);
    $isInCamCRght = $this->isInsidePoly($this->point, $polys["SawmillRight"]);
    $isInCamD     = $this->isInsidePoly($this->point, $polys["HistoricalSoc"]);
    $isInCamE     = $this->isInsidePoly($this->point, $polys["PortByron"]);
    
    //Show Waypoints when all cams disabled
    if($this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] &&
       $this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClbIsDisabled'] &&
       $this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClcIsDisabled']) 
    {
        $this->live->PlotDaemon->AdminTriggersModel->setClCamsAreDisabled();
        flog("      Location::determineCamera() = Clinton cams disabled, using Waypoint slides instead\n");
        return ["srcID" => false, 'zoom' => 0]; 
    } else {
        //If at least one cam is working. Re-enable video if off
        if($this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClAllCamsAreDisabled']) {
            $this->live->PlotDaemon->AdminTriggersModel->setClCamsAreEnabled();
        }
    }
    
    //Tabulate the camera to return by the in-view boolean + check for camera disabled
    if($isInCamA) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinDR'] ) {
            flog("      Location::determineCamera() = CabinDR\n");
            return ["srcID" => 'CabinDR', 'zoom' => 0];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinUR']){
            flog("      Location::determineCamera() = CabinDR disabled, using CabinUR instead\n");
            return ["srcID" => 'CabinUR', 'zoom' => 0];
        } else {
            flog("      Location::determineCamera() = Webcams A & B disabled, using sawmill right\n");
            return ["srcID" => 'Sawmill', 'zoom' => 3];
        }
    }

    if($isInCamB) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinUR']){
            flog("      Location::determineCamera() = CabinUR\n");
            return ["srcID" => 'CabinUR', 'zoom' => 0];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinDR'] ) {
            flog("      Location::determineCamera() = CabinUR disabled, using CabinDR instead\n");    
            return ["srcID" => 'CabinDR', 'zoom' => 0];  
        } else {
            flog("      Location::determineCamera() = Webcams A & B disabled, using sawmill right\n");
            return ["srcID" => 'Sawmill', 'zoom' => 3];
        }
    }

    if($isInCamCRght) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['Sawmill']) {
            flog("      Location::determineCamera() = SawmillRight\n");
            return ["srcID" => 'Sawmill', 'zoom' => 3];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinDR'] ) {
            flog("      Location::determineCamera() = Sawmill cam disabled, using A instead\n");    
            return ["srcID" => 'CabinDR', 'zoom' => 0];  
        }
    }

    if($isInCamCCent) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['Sawmill']) {
            flog("      Location::determineCamera() = SawmillCenter\n");
            return ["srcID" => 'Sawmill', 'zoom' => 2];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinDR'] ) {
            flog("      Location::determineCamera() = Sawmill cam disabled, using CabinDR instead\n");    
            return ["srcID" => 'CabinDR', 'zoom' => 0];  
        }
    }

    if($isInCamCLeft) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['Sawmill']) {
            flog("      Location::determineCamera() = SawmillLeft\n");
            return ["srcID" => 'Sawmill', 'zoom' => 1];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinDR'] ) {
            flog("      Location::determineCamera() = Sawmill cam disabled, using A instead\n");    
            return ["srcID" => 'CabinDR', 'zoom' => 0];  
        }
    }

    if($isInCamD) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['HistoricalSoc']){
            flog("      Location::determineCamera() = HistoricalSoc\n");
            return ["srcID" => 'HistoricalSoc', 'zoom' => 0];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinDR'] ) {
            flog("      Location::determineCamera() = HistoricalSoc disabled, using CabinDR instead\n");    
            return ["srcID" => 'CabinDR', 'zoom' => 0];  
        }else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['CabinUR'] ) {
            flog("      Location::determineCamera() = HistoricalSoc disabled, using CabinUR instead\n");    
            return ["srcID" => 'CabinUR', 'zoom' => 0];  
        }  
        else {
            flog("      Location::determineCamera() = Webcams D, A & B disabled, using sawmill right\n");
            return ["srcID" => 'Sawmill', 'zoom' => 3];
        }
    }
    if($isInCamE) {
        echo "read of disabledWebcams".var_dump($this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']);
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['disabledWebcams']['PortByron']){
            flog("      Location::determineCamera() = PortByron\n");
            return ["srcID" => 'PortByron', 'zoom' => 0];
        } 
        else {
            flog("      Location::determineCamera() = PortByron disabled, using sawmill right\n");
            return ["srcID" => 'Sawmill', 'zoom' => 3];
        }
    }

    return ["srcID"=> false, 'zoom'=>0];

  }
 


  public function determineCamera_old() { //Refactored 4/9/23 to include sawmill camera & its zoom. Returns name "A", "B" or "C"; zoom 0, 1, 2 or 3; or false
    $polys = [
        "clintonWebcamA"=>[[-90.19574154245394,41.79894380177605],[-90.19848987767594,41.80275731583387],[-90.2110598422512,41.80023522493453],[-90.20863976055016,41.79535621390145],[-90.19574154245394,41.79894380177605]],
        "clintonWebcamB"=>[[-90.18665777418799,41.80172331446524],[-90.18241924324515,41.80447550087962],[-90.18382325251146,41.80785938852225],[-90.19848702798852,41.80279497988711],[-90.19566956157554,41.79887548569596],[-90.18665777418799,41.80172331446524]],
        "sawmillCenter"=>[[-90.16827037644022,41.87004726698395],[-90.17365220400626,41.87108032268587],[-90.17456711490483,41.86859361124102],[-90.16922724177618,41.86689929036727],[-90.16827037644022,41.87004726698395]],
        "sawmillLeft"=>[[-90.16501264098754,41.87894741988096],[-90.17251063427827,41.87884147250501],[-90.17363457771249,41.8711105382974],[-90.16823146186927,41.87006671607528],[-90.16501264098754,41.87894741988096]],
        "sawmillRight"=>[[-90.16915895992925,41.86684393093491],[-90.17447976000039,41.86855724499563],[-90.17650722879176,41.86370945812324],[-90.17059025504298,41.86313198828161],[-90.16915895992925,41.86684393093491]],
        "clintonWebcamD"=>[ [-90.18457852931127,41.84040938998683],[-90.18629171882891,41.83629778523537],[-90.18317858141694,41.83617619617841],[-90.18043377301612,41.84005278002021],[-90.18457852931127,41.84040938998683]] 

       
    ];

    $this->setPoint();
    $isInCamA     = $this->isInsidePoly($this->point, $polys["clintonWebcamA"]);
    $isInCamB     = $this->isInsidePoly($this->point, $polys["clintonWebcamB"]);
    $isInCamCLeft = $this->isInsidePoly($this->point, $polys["sawmillLeft"]);
    $isInCamCCent = $this->isInsidePoly($this->point, $polys["sawmillCenter"]);
    $isInCamCRght = $this->isInsidePoly($this->point, $polys["sawmillRight"]);
    $isInCamD     = $this->isInsidePoly($this->point, $polys["clintonWebcamD"]);
    
    //Show Waypoints when all cams disabled
    if($this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] &&
       $this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClbIsDisabled'] &&
       $this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClcIsDisabled']) 
    {
        $this->live->PlotDaemon->AdminTriggersModel->setClCamsAreDisabled();
        flog("      Location::determineCamera() = Clinton cams disabled, using Waypoint slides instead\n");
        return ["srcID" => false, 'zoom' => 0]; 
    } else {
        //If at least one cam is working. Re-enable video if off
        if($this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClAllCamsAreDisabled']) {
            $this->live->PlotDaemon->AdminTriggersModel->setClCamsAreEnabled();
        }
    }
    
    //Tabulate the camera to return by the in-view boolean + check for camera disabled
    if($isInCamA) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamA\n");
            return ["srcID" => 'A', 'zoom' => 0];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClbIsDisabled']){
            flog("      Location::determineCamera() = clintonWebcamA disabled, using B instead\n");
            return ["srcID" => 'B', 'zoom' => 0];
        } else {
            flog("      Location::determineCamera() = Webcams A & B disabled, using sawmill right\n");
            return ["srcID" => 'C', 'zoom' => 3];
        }
    }

    if($isInCamB) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClbIsDisabled']){
            flog("      Location::determineCamera() = clintonWebcamB\n");
            return ["srcID" => 'B', 'zoom' => 0];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamB disabled, using A instead\n");    
            return ["srcID" => 'A', 'zoom' => 0];  
        } else {
            flog("      Location::determineCamera() = Webcams A & B disabled, using sawmill right\n");
            return ["srcID" => 'C', 'zoom' => 3];
        }
    }

    if($isInCamCRght) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClcIsDisabled']) {
            flog("      Location::determineCamera() = sawmillRight\n");
            return ["srcID" => 'C', 'zoom' => 3];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamC disabled, using A instead\n");    
            return ["srcID" => 'A', 'zoom' => 0];  
        }
    }

    if($isInCamCCent) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClcIsDisabled']) {
            flog("      Location::determineCamera() = sawmillCenter\n");
            return ["srcID" => 'C', 'zoom' => 2];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamC disabled, using A instead\n");    
            return ["srcID" => 'A', 'zoom' => 0];  
        }
    }

    if($isInCamCLeft) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClcIsDisabled']) {
            flog("      Location::determineCamera() = sawmillLeft\n");
            return ["srcID" => 'C', 'zoom' => 1];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamC disabled, using A instead\n");    
            return ["srcID" => 'A', 'zoom' => 0];  
        }
    }

    if($isInCamD) {
        if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamCldIsDisabled']){
            flog("      Location::determineCamera() = clintonWebcamD\n");
            return ["srcID" => 'D', 'zoom' => 0];
        } else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClaIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamD disabled, using A instead\n");    
            return ["srcID" => 'A', 'zoom' => 0];  
        }else if(!$this->live->PlotDaemon->AdminTriggersModel->adminData['webcamClbIsDisabled'] ) {
            flog("      Location::determineCamera() = clintonWebcamD disabled, using B instead\n");    
            return ["srcID" => 'B', 'zoom' => 0];  
        }  
        else {
            flog("      Location::determineCamera() = Webcams D, A & B disabled, using sawmill right\n");
            return ["srcID" => 'C', 'zoom' => 3];
        }
    }
    return ["srcID"=> false, 'zoom'=>0];

  }
  

  public function determineCaptureVideo() { //Returns nothing
    flog("      Location::determineCaptureVideo() ");
    $polys = [
      "clintonWebcamB"=>[
        [-90.192278, 41.803909],
        [-90.191025, 41.802271],
        [-90.195866, 41.799151],
        [-90.201082, 41.801646],
        [-90.192278, 41.803909]
      ]
    ];
    $this->setPoint();
    if($this->isInsidePoly($this->point, $polys["clintonWebcamB"])) {
      $now = time();
      flog(" is inside poly (now: $now - last: {$this->live->lastVideoRecordedTS}) ");
      if($now - $this->live->lastVideoRecordedTS > 300) { //Limit 86400 is once daily [300 is 5 min for testing]
        $this->live->lastVideoRecordedTS = $now; 
        $this->live->PlotDaemon->captureVideo($this->live);
        flog(" is > 86400? TRUE");    
      } else {
        flog(" is > 86400? FALSE");
      }
    } else {
      flog("false");
    }
    flog("\n");
  }

  public function determineIfPassingCamera() { //Returns nothing
    flog("      Location::determineIfPassingCamera(".$this->live->liveName.") ");
    $polys = [
      "clintonWebcams"=>[
        [-90.201650, 41.801466],
        [-90.194279, 41.803250],
        [-90.194258, 41.799582],
        [-90.197659, 41.798569],
        [-90.201650, 41.801466]
      ]
    ];
    $this->setPoint();
    if($this->isInsidePoly($this->point, $polys["clintonWebcams"])) {
      flog(" -> inside clintonWebcams poly.\n ");
      //Set flag in Admin document
      $this->live->PlotDaemon->VesselsModel->setVideoIsPassing(true);
    } else {
      flog("= FALSE\n");
      $this->live->PlotDaemon->VesselsModel->setVideoIsPassing(false);
      //Called method writes to db only on state change, not every loop.
    }
  }


  public function determineSegment() { //Sets segment in Location obj and returns it
    $segment = [
      ['m465','m466','m467','m468','m469','m470','m471','m472','m473','m474','m475','m476','m477','m500', 'm501','m502','msabula','m503','m504','m505','m506','m507','m508','m509','m510','m511','m512','m513','m514'],
      ['m478','m479','m480','m481','m482','m515','m516','m517','mcredit_island_slough','mlakepotter','mhotel','mdelta','mcamanche','malbany','mbeaver'],
      ['m483','m484','m485','m486','m487','m488','m489','m490','m491','m492','m518','m519','mjoyce_slough_clinton','m520','m521','m522','mcharlie','mgolf'],
      ['m493','m494','leclaire_slough','m495','m523','m524','m525','mfoxtrot','mbravo'],
      ['m496','m497','m498','m499','m526','m527','m528','m529','m530','m531','m532','m533','m534','m535','m536','m538','m539','m540','m541','m542','m543','m544','m545','m546','m547','m548','m549','m550','m551','m552','m553','m554','m555','m556','m557','m558','m559','m560','m561','m562','m563','m564','m565','m566','m567','m568','m569','m570','m571','m572','m573','m574','m575','m576','mecho','malpha']
    ];
    for($i=0; $i<5; $i++) {
      if(in_array($this->mm, $segment[$i])) {
        $this->segment = $i;
        return $i;
      }
    }
    return -1;
  }

  public function isInsidePoly($point, $vs) {
      // ray-casting algorithm based on
      // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html
  
      $x = $point[0]; $y = $point[1];
      $len = count($vs);
      $inside = false;
      for ($i = 0, $j = $len - 1; $i < $len; $j = $i++) {
          $xi = $vs[$i][0]; $yi = $vs[$i][1];
          $xj = $vs[$j][0]; $yj = $vs[$j][1];
  
          $intersect = (($yi > $y) != ($yj > $y))
              && ($x < ($xj - $xi) * ($y - $yi) / ($yj - $yi) + $xi);
          if ($intersect) { $inside = !$inside; }
      }
  
      return $inside;
  }

  public function isNewEvent($event, $suppressTrigger=false) {
      //flog( "      isNewEvent()...\n");
      $status = $this->isAuthenticEvent($event, $suppressTrigger);
      if($status) {
          //Push new event to array and do updates
          $this->lastEvent = $this->event;     
          $this->event = $event;
          $this->lastEventTS = $this->eventTS;
          $this->eventTS = time();
          $this->events[$this->event] = $this->eventTS; 
      }
      return $status;           
  }

  public function isNewWaypoint($waypoint, $suppressTrigger=false) {
    //flog( "      isNewWaypoint()...\n");
    $status = $this->isAuthenticWaypoint($waypoint, $suppressTrigger);
    if($status) {
        //Push description array to location->description
        $zoneName = "m".$waypoint;

        $this->description = ZONE::$$zoneName;
        //Push new waypoint to array and do updates
        $this->lastWaypoint = $this->waypoint;     
        $this->waypoint = $waypoint;
        //$this->lastWaypointTS = $this->waypointTS;
        $this->waypointTS = time();
        $this->waypoints[$this->waypoint] = $this->waypointTS; 
    }
    return $status;           
}

  public function isAuthenticEvent($event, $suppressTrigger=false) {
      if($suppressTrigger) {
          flog( "\033[33m        * isAuthenticEvent() = TRIGGER SUPPRESSED \033[0m\n");
          return false;
      }
      if($event == $this->lastEvent) {
          flog( "\033[33m        * isAuthenticEvent() = SAME AS LAST EVENT\033[0m\n");
          return false;
      }
      //Is this event in array already?
      if(isset($this->events[$event])) {
          flog( "\033[33m        * isAuthenticEvent() = EVENT IN ARRAY ALREADY\033[0m\n");
          return false;
      }
      //Reject update if one just happened
      if((time() - $this->lastEventTS) < 60) {
          flog( "\033[33m        * isAuthenticEvent() = EVENT < 60 OLD \033[0m\n");
          return false;
      }
      flog( "\033[33m        * isAuthenticEvent() = $event EVENT IS AUTHENTIC\033[0m\n");        
      return true;
  }


  public function isAuthenticWaypoint($waypoint, $suppressTrigger=false) {
    if($suppressTrigger) {
        flog( "\033[33m        * isAuthenticWaypoint() = TRIGGER SUPPRESSED \033[0m\n");
        return false;
    }
    if($waypoint == $this->lastWaypoint) {
        flog( "\033[33m        * isAuthenticWaypoint() = SAME AS LAST EVENT\033[0m\n");
        return false;
    }
    //Is this waypoint in array already?
    if(isset($this->waypoints[$waypoint])) {
        flog( "\033[33m        * isAuthenticWaypoint() = EVENT IN ARRAY ALREADY\033[0m\n");
        return false;
    }
    //Reject update if one just happened
    if((time() - $this->lastWaypointTS) < 60) {
        flog( "\033[33m        * isAuthenticWaypoint() = EVENT < 60 OLD \033[0m\n");
        return false;
    }
    flog( "\033[33m        * isAuthenticWaypoint() = $waypoint EVENT IS AUTHENTIC\033[0m\n");        
    return true;
}
    
}